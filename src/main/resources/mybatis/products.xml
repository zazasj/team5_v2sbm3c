<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.products.ProductsDAOInter">
  <!-- 등록한 레코드 갯수 1 리턴, #{adminno}: public int getAdminno() 호출됨 -->
  <insert id="create" parameterType="dev.mvc.products.ProductsVO">
    INSERT INTO Products(ProductID, CategoryID, SupplierID, PName, Origin, Description, Volume, AlcoholContent, Price)
    VALUES(product_seq.nextval, #{CategoryID}, #{SupplierID}, #{PName}, #{Origin}, #{Description}, #{Volume}, #{AlcogolContent}, #{Price})
  </insert>

  <!-- 모든 카테고리의 등록된 글목록 -->
  <select id="list_all" resultType="dev.mvc.products.ProductsVO">
    SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom
    FROM Products
    ORDER BY ProductID DESC
  </select>
  
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_categoryID" resultType="dev.mvc.products.ProductsVO" parameterType="int">
    SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom
    FROM Products 
    WHERE CategoryID = #{CategoryID}
    ORDER BY ProductID DESC
  </select> 
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.products.ProductsVO" parameterType="int">
    SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom
    FROM Products 
    WHERE ProductID = #{ProductID}
  </select>

  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_categoryID_search" resultType="dev.mvc.products.ProductsVO" parameterType="HashMap">
    SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom
    FROM Products
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE CategoryID=#{CategoryID}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE CategoryID=#{CategoryID} AND (UPPER(PName) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(Description) LIKE '%' || UPPER(#{word}) || '%' )
      </otherwise>
    </choose>
    ORDER BY ProductID DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM Products
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE CategoryID=#{CategoryID}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE CategoryID=#{CategoryID} AND (UPPER(PName) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(Description) LIKE '%' || UPPER(#{word}) || '%' )
      </otherwise>
    </choose>
  </select>   

  <!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_categoryID_search_paging" resultType="dev.mvc.products.ProductsVO" parameterType="dev.mvc.products.ProductsVO">
   SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom, r
   FROM (
              SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom, rownum as r
              FROM (
                        SELECT ProductID, CategoryID, SupplierID, Origin, PName, Description, Volume, AlcoholContent, Price, ImageFile, ImageFileSaved, Thumbs, sizes, Pcnt, recom
                        FROM Products
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE CategoryID=#{CategoryID}
                          </when>
                          <otherwise>
                            WHERE CategoryID=#{CategoryID} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' )
                          </otherwise>
                        </choose>
                        ORDER BY ProductID DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  
  <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.products.ProductsVO">
    UPDATE Products
    SET PName=#{PName}, Description=#{Description}
    WHERE ProductID = #{ProductID}
  </update>


  <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.products.ProductsVO">
    UPDATE Products
    SET ImageFile=#{ImageFile}, ImageFileSaved=#{ImageFileSaved}, Thumbs=#{Thumbs}, sizes=#{sizes}
    WHERE ProductID = #{ProductID}
  </update>  

  <delete id="delete" parameterType="int">
    DELETE FROM Products
    WHERE ProductID=#{ProductID}
  </delete>
  
    <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_categoryID" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM Products 
    WHERE CategoryID=#{CategoryID}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_categoryID" parameterType="int">
    DELETE FROM Products
    WHERE ProductID=#{ProductID}
  </delete>
          
</mapper> 


